package mashin.oep.model;

import org.eclipse.ui.views.properties.IPropertyDescriptor;
import org.eclipse.ui.views.properties.TextPropertyDescriptor;

public class Property extends PropertyElement implements HPDLSerializable {

  private String namePropId;
  private String valuePropId;
  private String descriptionPropId;
  private IPropertyDescriptor[] propertyDescriptors;
  
  private String name = "";
  private String value = "";
  private String description = "";
  
  public Property() {
    this.namePropId = this.idPrefix + ".name";
    this.valuePropId = this.idPrefix + ".value";
    this.descriptionPropId = this.idPrefix + ".description";
    propertyDescriptors = new IPropertyDescriptor[] {
      new TextPropertyDescriptor(this.namePropId, "Name"),
      new TextPropertyDescriptor(this.valuePropId, "Value"),
      new TextPropertyDescriptor(this.descriptionPropId, "Description")
    };
    for(IPropertyDescriptor ipds: propertyDescriptors) {
      ((TextPropertyDescriptor) ipds).setCategory("Property");
    }
  }
  
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }

  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  @Override
  public boolean isEmpty() {
    return name.isEmpty() && value.isEmpty() && description.isEmpty();
  }
  
  @Override
  public String getIDPrefixPrefix() {
    return "prop.property.id";
  };
  
  @Override
  public void setPropertyValue(String propertyName, Object propertyValue) {
    if(namePropId.equals(propertyName)) {
      setName((String) propertyValue); 
    }
    if(valuePropId.equals(propertyName)) {
      setValue((String) propertyValue);
    }
    if(descriptionPropId.equals(propertyName)) {
      setDescription((String) propertyValue);
    }
  }
  
  @Override
  public Object getPropertyValue(String propertyName) {
    if(namePropId.equals(propertyName)) {
      return getName();
    }
    if(valuePropId.equals(propertyName)) {
      return getValue();
    }
    if(descriptionPropId.equals(propertyName)) {
      return getDescription();
    }
    return null;
  }
  
  @Override
  public IPropertyDescriptor[] getPropertyDescriptors() {
    return this.propertyDescriptors;
  }
  
  @Override
  public String toHPDL() {
    return null;
  }
  
  @Override
  public void fromHPDL(String hpdl) {
    
  }
  
}
